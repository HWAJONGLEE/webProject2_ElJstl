/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-19 05:26:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import java.util.ArrayList;

public final class memberListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Member> list = (ArrayList<Member>)request.getAttribute("list");

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>testel</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("form.sform {\r\n");
      out.write("\tdisplay : none;\r\n");
      out.write("\tbackground : lightgray;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/testel/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//jquery 로 이벤트 처리 : form 을 보이게 안보이게 처리함\r\n");
      out.write("/*\r\n");
      out.write(" jQuery(document.ready(){}); => 이 문서가 브라우저에 읽어 들이기가 완료되면\r\n");
      out.write(" jQuery 는 $ 로 표기해도 됨\r\n");
      out.write(" $(function({})); 로 줄여서 사용해도 됨\r\n");
      out.write(" => 자바스크립트로는 window.onload = function(){}; 과 같음\r\n");
      out.write(" */\r\n");
      out.write("$(function(){\r\n");
      out.write("\t//작성된 이벤트 처리 코드는 실행 대기 상태가 됨\r\n");
      out.write("\t//jQuery(\"선택자\").실행시킬메소드(전달값,...);\r\n");
      out.write("\t$(\"input[name=item]\").on(\"change\", function(){\r\n");
      out.write("\t\t//이벤트가 발생한 radio 와 연결된 폼만 보이게 하고,\r\n");
      out.write("\t\t//나머지 폼은 안보이게 처리함\r\n");
      out.write("\t\t$(\"input[name=item]\").each(function(index){\r\n");
      out.write("\t\t\t//radio 하나씩 checked 인지 확인하고\r\n");
      out.write("\t\t\tif($(this).is(\":checked\")){  //해당 인덱스 순번의 radio가 체크상태이냐?\r\n");
      out.write("\t\t\t\t$(\"form.sform\").eq(index).css(\"display\", \"block\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$(\"form.sform\").eq(index).css(\"display\", \"none\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function changeLogin(element){\t\r\n");
      out.write("\t//선택한 radio의 name 속성값에서 userid 분리 추출함\r\n");
      out.write("\tvar userid = element.name.substring(8);\r\n");
      out.write("\tconsole.log(userid);\r\n");
      out.write("\tif(element.checked == true && element.value == \"false\"){\r\n");
      out.write("\t\tconsole.log(\"로그인제한 체크함\");\r\n");
      out.write("\t\tlocation.href = \"/testel/loginOK?userid=\" + userid + \"&ok=false\";\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tconsole.log(\"로그인제한 해제함\");\r\n");
      out.write("\t\tlocation.href = \"/testel/loginOK?userid=\" + userid + \"&ok=true\";\t\t\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<c:import url=\"../common/header.jsp\"/>\r\n");
      out.write("<hr>\r\n");
      out.write("<h1 align=\"center\">전체 회원 관리 페이지</h1>\r\n");
      out.write("<h2 align=\"center\">현재 회원수 : ");
      out.print( list.size() );
      out.write(" 명</h2>\r\n");
      out.write("<center>\r\n");
      out.write("\t<button onclick=\"javascript:location.href='/testel/mlist'\">전체 보기</button>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<!-- 항목별 검색 기능 추가 -->\r\n");
      out.write("<fieldset id=\"ss\">\r\n");
      out.write("<legend>검색할 항목을 선택하세요.</legend>\r\n");
      out.write("<input type=\"radio\" name=\"item\" id=\"uid\"> 회원 아이디 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"item\" id=\"ugen\"> 성별 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"item\" id=\"uage\"> 연령대 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"item\" id=\"uenroll\"> 가입날짜 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"item\" id=\"ulogok\"> 로그인제한 \r\n");
      out.write("</fieldset>\r\n");
      out.write("<!-- 검색 기능 영역 끝 -->\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<!-- 회원 아이디로 검색 폼 -->\r\n");
      out.write("<form action=\"/testel/msearch\" method=\"post\" id=\"idform\" class=\"sform\">\r\n");
      out.write("<input type=\"hidden\" name=\"action\" value=\"id\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>검색할 아이디를 입력하세요.</legend>\r\n");
      out.write("<input type=\"search\" name=\"keyword\"> &nbsp; \r\n");
      out.write("<input type=\"submit\" value=\"검색\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- 성별 검색 폼 -->\r\n");
      out.write("<form action=\"/testel/msearch\" method=\"post\" id=\"genderform\" class=\"sform\">\r\n");
      out.write("<input type=\"hidden\" name=\"action\" value=\"gender\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>검색할 성별을 선택하세요.</legend>\r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"M\"> 남자 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"F\"> 여자 &nbsp;\r\n");
      out.write("<input type=\"submit\" value=\"검색\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- 연령대 검색 폼 -->\r\n");
      out.write("<form action=\"/testel/msearch\" method=\"post\" id=\"ageform\" class=\"sform\">\r\n");
      out.write("<input type=\"hidden\" name=\"action\" value=\"age\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>검색할 연령대를 선택하세요.</legend>\r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"20\"> 20대 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"30\"> 30대 &nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"40\"> 40대 &nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"50\"> 50대 &nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"60\"> 60대이상 &nbsp;\r\n");
      out.write("<input type=\"submit\" value=\"검색\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- 가입날짜 검색 폼 -->\r\n");
      out.write("<form action=\"/testel/msearch\" method=\"post\" id=\"enrollform\" class=\"sform\">\r\n");
      out.write("<input type=\"hidden\" name=\"action\" value=\"enrolldate\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>검색할 가입날짜를 선택하세요.</legend>\r\n");
      out.write("<input type=\"date\" name=\"begin\"> ~ \r\n");
      out.write("<input type=\"date\" name=\"end\"> &nbsp;\r\n");
      out.write("<input type=\"submit\" value=\"검색\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- 로그인 제한/가능 검색 폼 -->\r\n");
      out.write("<form action=\"/testel/msearch\" method=\"post\" id=\"lokform\" class=\"sform\">\r\n");
      out.write("<input type=\"hidden\" name=\"action\" value=\"loginok\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>검색할 로그인 제한/가능을 선택하세요.</legend>\r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"Y\"> 로그인 가능 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"keyword\" value=\"N\"> 로그인 제한 &nbsp;\r\n");
      out.write("<input type=\"submit\" value=\"검색\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("</center>\r\n");
      out.write("<br>\r\n");
      out.write("<table align=\"center\" border=\"1\" cellspacing=\"0\" cellpadding=\"3\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th>아이디</th><th>이름</th><th>성별</th><th>나이</th><th>전화번호</th>\r\n");
      out.write("<th>이메일</th><th>취미</th>\r\n");
      out.write("<th>하고 싶은 말</th><th>가입날짜</th><th>마지막 수정날짜</th>\r\n");
      out.write("<th>로그인 제한 여부</th>\r\n");
      out.write("</tr>\r\n");
 for(Member m : list){ 
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print( m.getUserid() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getUsername() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( (m.getGender().equals("M"))? "남자" : "여자" );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getAge() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getPhone() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getEmail() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getHobby() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getEtc() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getEnrollDate() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( m.getLastModified() );
      out.write("</td>\r\n");
      out.write("<td>\r\n");
 if(m.getLoginok().equals("Y")){ 
      out.write("\r\n");
      out.write("<input type=\"radio\" name=\"loginok_");
      out.print( m.getUserid() );
      out.write("\" onchange=\"changeLogin(this);\"\r\n");
      out.write(" value=\"true\" checked> 가능 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"loginok_");
      out.print( m.getUserid() );
      out.write("\" onchange=\"changeLogin(this);\"\r\n");
      out.write("value=\"false\"> 제한\r\n");
 }else{ 
      out.write("\r\n");
      out.write("<input type=\"radio\" name=\"loginok_");
      out.print( m.getUserid() );
      out.write("\" onchange=\"changeLogin(this);\"\r\n");
      out.write(" value=\"true\"> 가능 &nbsp; \r\n");
      out.write("<input type=\"radio\" name=\"loginok_");
      out.print( m.getUserid() );
      out.write("\" onchange=\"changeLogin(this);\"\r\n");
      out.write("value=\"false\" checked> 제한\r\n");
 } 
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
 } 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<hr>\r\n");
      out.write("<!-- 상대경로만 사용 가능함 -->\r\n");
      out.write("\r\n");
      out.write("<c:import url=\"../common/header.jsp\"/>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
